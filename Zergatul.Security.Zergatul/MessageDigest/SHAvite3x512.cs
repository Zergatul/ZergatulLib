using System;
using static Zergatul.BitHelper;
using static Zergatul.Security.Zergatul.MessageDigest.SHAvite3Constants;

namespace Zergatul.Security.Zergatul.MessageDigest
{
    class SHAvite3x512 : Security.MessageDigest
    {
        public override int BlockLength => 128;
        public override int DigestLength => 64;

        protected byte[] buffer;
        protected int bufOffset;
        protected int outsize;
        protected uint h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, ha, hb, hc, hd, he, hf;
        protected uint c0, c1, c2, c3;

        public SHAvite3x512()
        {
            buffer = new byte[128];
            Reset();
        }

        public override void Reset()
        {
            h0 = 0x72FCCDD8;
            h1 = 0x79CA4727;
            h2 = 0x128A077B;
            h3 = 0x40D55AEC;
            h4 = 0xD1901A06;
            h5 = 0x430AE307;
            h6 = 0xB29F5CD1;
            h7 = 0xDF07FBFC;
            h8 = 0x8E45D73D;
            h9 = 0x681AB538;
            ha = 0xBDE86578;
            hb = 0xDD577E47;
            hc = 0xE275EADE;
            hd = 0x502D9FCD;
            he = 0xB9357178;
            hf = 0x022A4B9A;

            c0 = c1 = c2 = c3 = 0;

            bufOffset = 0;
        }

        public override void Update(byte[] data, int offset, int length)
        {
            if (data == null)
                throw new ArgumentNullException(nameof(data));
            if (offset < 0 || offset > data.Length)
                throw new ArgumentOutOfRangeException(nameof(offset));
            if (length < 0 || offset + length > data.Length)
                throw new ArgumentOutOfRangeException(nameof(length));

            while (length > 0)
            {
                int copy = System.Math.Min(buffer.Length - bufOffset, length);
                Buffer.BlockCopy(data, offset, buffer, bufOffset, copy);

                offset += copy;
                length -= copy;
                bufOffset += copy;

                if (bufOffset == buffer.Length)
                {
                    if ((c0 += 1024) == 0)
                    {
                        c1++;
                        if (c1 == 0)
                        {
                            c2++;
                            if (c2 == 0)
                                c3++;
                        }
                    }

                    bufOffset = 0;
                    ProcessBlock();
                }
            }
        }

        public override byte[] Digest()
        {
            Close(16);

            byte[] digest = new byte[64];
            GetBytes(h0, ByteOrder.LittleEndian, digest, 0x00);
            GetBytes(h1, ByteOrder.LittleEndian, digest, 0x04);
            GetBytes(h2, ByteOrder.LittleEndian, digest, 0x08);
            GetBytes(h3, ByteOrder.LittleEndian, digest, 0x0C);
            GetBytes(h4, ByteOrder.LittleEndian, digest, 0x10);
            GetBytes(h5, ByteOrder.LittleEndian, digest, 0x14);
            GetBytes(h6, ByteOrder.LittleEndian, digest, 0x18);
            GetBytes(h7, ByteOrder.LittleEndian, digest, 0x1C);
            GetBytes(h8, ByteOrder.LittleEndian, digest, 0x20);
            GetBytes(h9, ByteOrder.LittleEndian, digest, 0x24);
            GetBytes(ha, ByteOrder.LittleEndian, digest, 0x28);
            GetBytes(hb, ByteOrder.LittleEndian, digest, 0x2C);
            GetBytes(hc, ByteOrder.LittleEndian, digest, 0x30);
            GetBytes(hd, ByteOrder.LittleEndian, digest, 0x34);
            GetBytes(he, ByteOrder.LittleEndian, digest, 0x38);
            GetBytes(hf, ByteOrder.LittleEndian, digest, 0x3C);
            return digest;
        }

        protected void ProcessBlock()
        {
            uint p0 = h0;
            uint p1 = h1;
            uint p2 = h2;
            uint p3 = h3;
            uint p4 = h4;
            uint p5 = h5;
            uint p6 = h6;
            uint p7 = h7;
            uint p8 = h8;
            uint p9 = h9;
            uint pa = ha;
            uint pb = hb;
            uint pc = hc;
            uint pd = hd;
            uint pe = he;
            uint pf = hf;

            uint rk00 = ToUInt32(buffer, 0x00, ByteOrder.LittleEndian);
            uint rk01 = ToUInt32(buffer, 0x04, ByteOrder.LittleEndian);
            uint rk02 = ToUInt32(buffer, 0x08, ByteOrder.LittleEndian);
            uint rk03 = ToUInt32(buffer, 0x0C, ByteOrder.LittleEndian);
            uint rk04 = ToUInt32(buffer, 0x10, ByteOrder.LittleEndian);
            uint rk05 = ToUInt32(buffer, 0x14, ByteOrder.LittleEndian);
            uint rk06 = ToUInt32(buffer, 0x18, ByteOrder.LittleEndian);
            uint rk07 = ToUInt32(buffer, 0x1C, ByteOrder.LittleEndian);
            uint rk08 = ToUInt32(buffer, 0x20, ByteOrder.LittleEndian);
            uint rk09 = ToUInt32(buffer, 0x24, ByteOrder.LittleEndian);
            uint rk0a = ToUInt32(buffer, 0x28, ByteOrder.LittleEndian);
            uint rk0b = ToUInt32(buffer, 0x2C, ByteOrder.LittleEndian);
            uint rk0c = ToUInt32(buffer, 0x30, ByteOrder.LittleEndian);
            uint rk0d = ToUInt32(buffer, 0x34, ByteOrder.LittleEndian);
            uint rk0e = ToUInt32(buffer, 0x38, ByteOrder.LittleEndian);
            uint rk0f = ToUInt32(buffer, 0x3C, ByteOrder.LittleEndian);
            uint rk10 = ToUInt32(buffer, 0x40, ByteOrder.LittleEndian);
            uint rk11 = ToUInt32(buffer, 0x44, ByteOrder.LittleEndian);
            uint rk12 = ToUInt32(buffer, 0x48, ByteOrder.LittleEndian);
            uint rk13 = ToUInt32(buffer, 0x4C, ByteOrder.LittleEndian);
            uint rk14 = ToUInt32(buffer, 0x50, ByteOrder.LittleEndian);
            uint rk15 = ToUInt32(buffer, 0x54, ByteOrder.LittleEndian);
            uint rk16 = ToUInt32(buffer, 0x58, ByteOrder.LittleEndian);
            uint rk17 = ToUInt32(buffer, 0x5C, ByteOrder.LittleEndian);
            uint rk18 = ToUInt32(buffer, 0x60, ByteOrder.LittleEndian);
            uint rk19 = ToUInt32(buffer, 0x64, ByteOrder.LittleEndian);
            uint rk1a = ToUInt32(buffer, 0x68, ByteOrder.LittleEndian);
            uint rk1b = ToUInt32(buffer, 0x6C, ByteOrder.LittleEndian);
            uint rk1c = ToUInt32(buffer, 0x70, ByteOrder.LittleEndian);
            uint rk1d = ToUInt32(buffer, 0x74, ByteOrder.LittleEndian);
            uint rk1e = ToUInt32(buffer, 0x78, ByteOrder.LittleEndian);
            uint rk1f = ToUInt32(buffer, 0x7C, ByteOrder.LittleEndian);

            uint x0, x1, x2, x3;
            uint t0, t1, t2, t3;

            #region Round 0

            x0 = p4 ^ rk00;
            x1 = p5 ^ rk01;
            x2 = p6 ^ rk02;
            x3 = p7 ^ rk03;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            x0 ^= rk04;
            x1 ^= rk05;
            x2 ^= rk06;
            x3 ^= rk07;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            x0 ^= rk08;
            x1 ^= rk09;
            x2 ^= rk0a;
            x3 ^= rk0b;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            x0 ^= rk0c;
            x1 ^= rk0d;
            x2 ^= rk0e;
            x3 ^= rk0f;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            p0 ^= x0;
            p1 ^= x1;
            p2 ^= x2;
            p3 ^= x3;
            x0 = pc ^ rk10;
            x1 = pd ^ rk11;
            x2 = pe ^ rk12;
            x3 = pf ^ rk13;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            x0 ^= rk14;
            x1 ^= rk15;
            x2 ^= rk16;
            x3 ^= rk17;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            x0 ^= rk18;
            x1 ^= rk19;
            x2 ^= rk1a;
            x3 ^= rk1b;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            x0 ^= rk1c;
            x1 ^= rk1d;
            x2 ^= rk1e;
            x3 ^= rk1f;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            p8 ^= x0;
            p9 ^= x1;
            pa ^= x2;
            pb ^= x3;

            #endregion

            for (int r = 0; r < 3; r++)
            {
                #region Round 1, 5, 9

                t0 = rk01;
                t1 = rk02;
                t2 = rk03;
                t3 = rk00;
                rk01 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk02 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk03 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk00 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk00;
                rk00 = rk01;
                rk01 = rk02;
                rk02 = rk03;
                rk03 = t0;
                rk00 ^= rk1c;
                rk01 ^= rk1d;
                rk02 ^= rk1e;
                rk03 ^= rk1f;
                if (r == 0)
                {
                    rk00 ^= c0;
                    rk01 ^= c1;
                    rk02 ^= c2;
                    rk03 ^= ~c3;
                }
                x0 = p0 ^ rk00;
                x1 = p1 ^ rk01;
                x2 = p2 ^ rk02;
                x3 = p3 ^ rk03;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk05;
                t1 = rk06;
                t2 = rk07;
                t3 = rk04;
                rk05 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk06 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk07 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk04 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk04;
                rk04 = rk05;
                rk05 = rk06;
                rk06 = rk07;
                rk07 = t0;
                rk04 ^= rk00;
                rk05 ^= rk01;
                rk06 ^= rk02;
                rk07 ^= rk03;
                if (r == 1)
                {
                    rk04 ^= c3;
                    rk05 ^= c2;
                    rk06 ^= c1;
                    rk07 ^= ~c0;
                }
                x0 ^= rk04;
                x1 ^= rk05;
                x2 ^= rk06;
                x3 ^= rk07;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk09;
                t1 = rk0a;
                t2 = rk0b;
                t3 = rk08;
                rk09 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk0a = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk0b = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk08 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk08;
                rk08 = rk09;
                rk09 = rk0a;
                rk0a = rk0b;
                rk0b = t0;
                rk08 ^= rk04;
                rk09 ^= rk05;
                rk0a ^= rk06;
                rk0b ^= rk07;
                x0 ^= rk08;
                x1 ^= rk09;
                x2 ^= rk0a;
                x3 ^= rk0b;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk0d;
                t1 = rk0e;
                t2 = rk0f;
                t3 = rk0c;
                rk0d = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk0e = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk0f = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk0c = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk0c;
                rk0c = rk0d;
                rk0d = rk0e;
                rk0e = rk0f;
                rk0f = t0;
                rk0c ^= rk08;
                rk0d ^= rk09;
                rk0e ^= rk0a;
                rk0f ^= rk0b;
                x0 ^= rk0c;
                x1 ^= rk0d;
                x2 ^= rk0e;
                x3 ^= rk0f;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                pc ^= x0;
                pd ^= x1;
                pe ^= x2;
                pf ^= x3;
                t0 = rk11;
                t1 = rk12;
                t2 = rk13;
                t3 = rk10;
                rk11 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk12 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk13 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk10 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk10;
                rk10 = rk11;
                rk11 = rk12;
                rk12 = rk13;
                rk13 = t0;
                rk10 ^= rk0c;
                rk11 ^= rk0d;
                rk12 ^= rk0e;
                rk13 ^= rk0f;
                x0 = p8 ^ rk10;
                x1 = p9 ^ rk11;
                x2 = pa ^ rk12;
                x3 = pb ^ rk13;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk15;
                t1 = rk16;
                t2 = rk17;
                t3 = rk14;
                rk15 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk16 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk17 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk14 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk14;
                rk14 = rk15;
                rk15 = rk16;
                rk16 = rk17;
                rk17 = t0;
                rk14 ^= rk10;
                rk15 ^= rk11;
                rk16 ^= rk12;
                rk17 ^= rk13;
                x0 ^= rk14;
                x1 ^= rk15;
                x2 ^= rk16;
                x3 ^= rk17;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk19;
                t1 = rk1a;
                t2 = rk1b;
                t3 = rk18;
                rk19 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk1a = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk1b = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk18 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk18;
                rk18 = rk19;
                rk19 = rk1a;
                rk1a = rk1b;
                rk1b = t0;
                rk18 ^= rk14;
                rk19 ^= rk15;
                rk1a ^= rk16;
                rk1b ^= rk17;
                x0 ^= rk18;
                x1 ^= rk19;
                x2 ^= rk1a;
                x3 ^= rk1b;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk1d;
                t1 = rk1e;
                t2 = rk1f;
                t3 = rk1c;
                rk1d = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk1e = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk1f = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk1c = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk1c;
                rk1c = rk1d;
                rk1d = rk1e;
                rk1e = rk1f;
                rk1f = t0;
                rk1c ^= rk18;
                rk1d ^= rk19;
                rk1e ^= rk1a;
                rk1f ^= rk1b;
                if (r == 2)
                {
                    rk1c ^= c2;
                    rk1d ^= c3;
                    rk1e ^= c0;
                    rk1f ^= ~c1;
                }
                x0 ^= rk1c;
                x1 ^= rk1d;
                x2 ^= rk1e;
                x3 ^= rk1f;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                p4 ^= x0;
                p5 ^= x1;
                p6 ^= x2;
                p7 ^= x3;

                #endregion

                #region Round 2, 6, 10

                rk00 ^= rk19;
                x0 = pc ^ rk00;
                rk01 ^= rk1a;
                x1 = pd ^ rk01;
                rk02 ^= rk1b;
                x2 = pe ^ rk02;
                rk03 ^= rk1c;
                x3 = pf ^ rk03;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk04 ^= rk1d;
                x0 ^= rk04;
                rk05 ^= rk1e;
                x1 ^= rk05;
                rk06 ^= rk1f;
                x2 ^= rk06;
                rk07 ^= rk00;
                x3 ^= rk07;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk08 ^= rk01;
                x0 ^= rk08;
                rk09 ^= rk02;
                x1 ^= rk09;
                rk0a ^= rk03;
                x2 ^= rk0a;
                rk0b ^= rk04;
                x3 ^= rk0b;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk0c ^= rk05;
                x0 ^= rk0c;
                rk0d ^= rk06;
                x1 ^= rk0d;
                rk0e ^= rk07;
                x2 ^= rk0e;
                rk0f ^= rk08;
                x3 ^= rk0f;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                p8 ^= x0;
                p9 ^= x1;
                pa ^= x2;
                pb ^= x3;
                rk10 ^= rk09;
                x0 = p4 ^ rk10;
                rk11 ^= rk0a;
                x1 = p5 ^ rk11;
                rk12 ^= rk0b;
                x2 = p6 ^ rk12;
                rk13 ^= rk0c;
                x3 = p7 ^ rk13;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk14 ^= rk0d;
                x0 ^= rk14;
                rk15 ^= rk0e;
                x1 ^= rk15;
                rk16 ^= rk0f;
                x2 ^= rk16;
                rk17 ^= rk10;
                x3 ^= rk17;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk18 ^= rk11;
                x0 ^= rk18;
                rk19 ^= rk12;
                x1 ^= rk19;
                rk1a ^= rk13;
                x2 ^= rk1a;
                rk1b ^= rk14;
                x3 ^= rk1b;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk1c ^= rk15;
                x0 ^= rk1c;
                rk1d ^= rk16;
                x1 ^= rk1d;
                rk1e ^= rk17;
                x2 ^= rk1e;
                rk1f ^= rk18;
                x3 ^= rk1f;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                p0 ^= x0;
                p1 ^= x1;
                p2 ^= x2;
                p3 ^= x3;

                #endregion

                #region Round 3, 7, 11

                t0 = rk01;
                t1 = rk02;
                t2 = rk03;
                t3 = rk00;
                rk01 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk02 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk03 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk00 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk00;
                rk00 = rk01;
                rk01 = rk02;
                rk02 = rk03;
                rk03 = t0;
                rk00 ^= rk1c;
                rk01 ^= rk1d;
                rk02 ^= rk1e;
                rk03 ^= rk1f;
                x0 = p8 ^ rk00;
                x1 = p9 ^ rk01;
                x2 = pa ^ rk02;
                x3 = pb ^ rk03;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk05;
                t1 = rk06;
                t2 = rk07;
                t3 = rk04;
                rk05 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk06 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk07 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk04 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk04;
                rk04 = rk05;
                rk05 = rk06;
                rk06 = rk07;
                rk07 = t0;
                rk04 ^= rk00;
                rk05 ^= rk01;
                rk06 ^= rk02;
                rk07 ^= rk03;
                x0 ^= rk04;
                x1 ^= rk05;
                x2 ^= rk06;
                x3 ^= rk07;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk09;
                t1 = rk0a;
                t2 = rk0b;
                t3 = rk08;
                rk09 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk0a = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk0b = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk08 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk08;
                rk08 = rk09;
                rk09 = rk0a;
                rk0a = rk0b;
                rk0b = t0;
                rk08 ^= rk04;
                rk09 ^= rk05;
                rk0a ^= rk06;
                rk0b ^= rk07;
                x0 ^= rk08;
                x1 ^= rk09;
                x2 ^= rk0a;
                x3 ^= rk0b;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk0d;
                t1 = rk0e;
                t2 = rk0f;
                t3 = rk0c;
                rk0d = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk0e = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk0f = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk0c = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk0c;
                rk0c = rk0d;
                rk0d = rk0e;
                rk0e = rk0f;
                rk0f = t0;
                rk0c ^= rk08;
                rk0d ^= rk09;
                rk0e ^= rk0a;
                rk0f ^= rk0b;
                x0 ^= rk0c;
                x1 ^= rk0d;
                x2 ^= rk0e;
                x3 ^= rk0f;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                p4 ^= x0;
                p5 ^= x1;
                p6 ^= x2;
                p7 ^= x3;
                t0 = rk11;
                t1 = rk12;
                t2 = rk13;
                t3 = rk10;
                rk11 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk12 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk13 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk10 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk10;
                rk10 = rk11;
                rk11 = rk12;
                rk12 = rk13;
                rk13 = t0;
                rk10 ^= rk0c;
                rk11 ^= rk0d;
                rk12 ^= rk0e;
                rk13 ^= rk0f;
                x0 = p0 ^ rk10;
                x1 = p1 ^ rk11;
                x2 = p2 ^ rk12;
                x3 = p3 ^ rk13;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk15;
                t1 = rk16;
                t2 = rk17;
                t3 = rk14;
                rk15 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk16 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk17 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk14 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk14;
                rk14 = rk15;
                rk15 = rk16;
                rk16 = rk17;
                rk17 = t0;
                rk14 ^= rk10;
                rk15 ^= rk11;
                rk16 ^= rk12;
                rk17 ^= rk13;
                x0 ^= rk14;
                x1 ^= rk15;
                x2 ^= rk16;
                x3 ^= rk17;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk19;
                t1 = rk1a;
                t2 = rk1b;
                t3 = rk18;
                rk19 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk1a = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk1b = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk18 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk18;
                rk18 = rk19;
                rk19 = rk1a;
                rk1a = rk1b;
                rk1b = t0;
                rk18 ^= rk14;
                rk19 ^= rk15;
                rk1a ^= rk16;
                rk1b ^= rk17;
                x0 ^= rk18;
                x1 ^= rk19;
                x2 ^= rk1a;
                x3 ^= rk1b;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk1d;
                t1 = rk1e;
                t2 = rk1f;
                t3 = rk1c;
                rk1d = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                rk1e = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                rk1f = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                rk1c = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                t0 = rk1c;
                rk1c = rk1d;
                rk1d = rk1e;
                rk1e = rk1f;
                rk1f = t0;
                rk1c ^= rk18;
                rk1d ^= rk19;
                rk1e ^= rk1a;
                rk1f ^= rk1b;
                x0 ^= rk1c;
                x1 ^= rk1d;
                x2 ^= rk1e;
                x3 ^= rk1f;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                pc ^= x0;
                pd ^= x1;
                pe ^= x2;
                pf ^= x3;

                #endregion

                #region Round 4, 8, 12

                rk00 ^= rk19;
                x0 = p4 ^ rk00;
                rk01 ^= rk1a;
                x1 = p5 ^ rk01;
                rk02 ^= rk1b;
                x2 = p6 ^ rk02;
                rk03 ^= rk1c;
                x3 = p7 ^ rk03;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk04 ^= rk1d;
                x0 ^= rk04;
                rk05 ^= rk1e;
                x1 ^= rk05;
                rk06 ^= rk1f;
                x2 ^= rk06;
                rk07 ^= rk00;
                x3 ^= rk07;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk08 ^= rk01;
                x0 ^= rk08;
                rk09 ^= rk02;
                x1 ^= rk09;
                rk0a ^= rk03;
                x2 ^= rk0a;
                rk0b ^= rk04;
                x3 ^= rk0b;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk0c ^= rk05;
                x0 ^= rk0c;
                rk0d ^= rk06;
                x1 ^= rk0d;
                rk0e ^= rk07;
                x2 ^= rk0e;
                rk0f ^= rk08;
                x3 ^= rk0f;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                p0 ^= x0;
                p1 ^= x1;
                p2 ^= x2;
                p3 ^= x3;
                rk10 ^= rk09;
                x0 = pc ^ rk10;
                rk11 ^= rk0a;
                x1 = pd ^ rk11;
                rk12 ^= rk0b;
                x2 = pe ^ rk12;
                rk13 ^= rk0c;
                x3 = pf ^ rk13;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk14 ^= rk0d;
                x0 ^= rk14;
                rk15 ^= rk0e;
                x1 ^= rk15;
                rk16 ^= rk0f;
                x2 ^= rk16;
                rk17 ^= rk10;
                x3 ^= rk17;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk18 ^= rk11;
                x0 ^= rk18;
                rk19 ^= rk12;
                x1 ^= rk19;
                rk1a ^= rk13;
                x2 ^= rk1a;
                rk1b ^= rk14;
                x3 ^= rk1b;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                rk1c ^= rk15;
                x0 ^= rk1c;
                rk1d ^= rk16;
                x1 ^= rk1d;
                rk1e ^= rk17;
                x2 ^= rk1e;
                rk1f ^= rk18;
                x3 ^= rk1f;
                t0 = x0;
                t1 = x1;
                t2 = x2;
                t3 = x3;
                x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
                x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
                x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
                x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
                p8 ^= x0;
                p9 ^= x1;
                pa ^= x2;
                pb ^= x3;

                #endregion
            }

            #region Round 13

            t0 = rk01;
            t1 = rk02;
            t2 = rk03;
            t3 = rk00;
            rk01 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            rk02 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            rk03 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            rk00 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk00;
            rk00 = rk01;
            rk01 = rk02;
            rk02 = rk03;
            rk03 = t0;
            rk00 ^= rk1c;
            rk01 ^= rk1d;
            rk02 ^= rk1e;
            rk03 ^= rk1f;
            x0 = p0 ^ rk00;
            x1 = p1 ^ rk01;
            x2 = p2 ^ rk02;
            x3 = p3 ^ rk03;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk05;
            t1 = rk06;
            t2 = rk07;
            t3 = rk04;
            rk05 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            rk06 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            rk07 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            rk04 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk04;
            rk04 = rk05;
            rk05 = rk06;
            rk06 = rk07;
            rk07 = t0;
            rk04 ^= rk00;
            rk05 ^= rk01;
            rk06 ^= rk02;
            rk07 ^= rk03;
            x0 ^= rk04;
            x1 ^= rk05;
            x2 ^= rk06;
            x3 ^= rk07;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk09;
            t1 = rk0a;
            t2 = rk0b;
            t3 = rk08;
            rk09 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            rk0a = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            rk0b = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            rk08 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk08;
            rk08 = rk09;
            rk09 = rk0a;
            rk0a = rk0b;
            rk0b = t0;
            rk08 ^= rk04;
            rk09 ^= rk05;
            rk0a ^= rk06;
            rk0b ^= rk07;
            x0 ^= rk08;
            x1 ^= rk09;
            x2 ^= rk0a;
            x3 ^= rk0b;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk0d;
            t1 = rk0e;
            t2 = rk0f;
            t3 = rk0c;
            rk0d = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            rk0e = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            rk0f = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            rk0c = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk0c;
            rk0c = rk0d;
            rk0d = rk0e;
            rk0e = rk0f;
            rk0f = t0;
            rk0c ^= rk08;
            rk0d ^= rk09;
            rk0e ^= rk0a;
            rk0f ^= rk0b;
            x0 ^= rk0c;
            x1 ^= rk0d;
            x2 ^= rk0e;
            x3 ^= rk0f;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            pc ^= x0;
            pd ^= x1;
            pe ^= x2;
            pf ^= x3;
            t0 = rk11;
            t1 = rk12;
            t2 = rk13;
            t3 = rk10;
            rk11 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            rk12 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            rk13 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            rk10 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk10;
            rk10 = rk11;
            rk11 = rk12;
            rk12 = rk13;
            rk13 = t0;
            rk10 ^= rk0c;
            rk11 ^= rk0d;
            rk12 ^= rk0e;
            rk13 ^= rk0f;
            x0 = p8 ^ rk10;
            x1 = p9 ^ rk11;
            x2 = pa ^ rk12;
            x3 = pb ^ rk13;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk15;
            t1 = rk16;
            t2 = rk17;
            t3 = rk14;
            rk15 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            rk16 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            rk17 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            rk14 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk14;
            rk14 = rk15;
            rk15 = rk16;
            rk16 = rk17;
            rk17 = t0;
            rk14 ^= rk10;
            rk15 ^= rk11;
            rk16 ^= rk12;
            rk17 ^= rk13;
            x0 ^= rk14;
            x1 ^= rk15;
            x2 ^= rk16;
            x3 ^= rk17;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk19;
            t1 = rk1a;
            t2 = rk1b;
            t3 = rk18;
            rk19 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            rk1a = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            rk1b = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            rk18 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk18;
            rk18 = rk19;
            rk19 = rk1a;
            rk1a = rk1b;
            rk1b = t0;
            rk18 ^= rk14 ^ c1;
            rk19 ^= rk15 ^ c0;
            rk1a ^= rk16 ^ c3;
            rk1b ^= rk17 ^ ~c2;
            x0 ^= rk18;
            x1 ^= rk19;
            x2 ^= rk1a;
            x3 ^= rk1b;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk1d;
            t1 = rk1e;
            t2 = rk1f;
            t3 = rk1c;
            rk1d = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            rk1e = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            rk1f = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            rk1c = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            t0 = rk1c;
            rk1c = rk1d;
            rk1d = rk1e;
            rk1e = rk1f;
            rk1f = t0;
            rk1c ^= rk18;
            rk1d ^= rk19;
            rk1e ^= rk1a;
            rk1f ^= rk1b;
            x0 ^= rk1c;
            x1 ^= rk1d;
            x2 ^= rk1e;
            x3 ^= rk1f;
            t0 = x0;
            t1 = x1;
            t2 = x2;
            t3 = x3;
            x0 = AES0[t0 & 0xFF] ^ AES1[(t1 >> 8) & 0xFF] ^ AES2[(t2 >> 16) & 0xFF] ^ AES3[(t3 >> 24) & 0xFF];
            x1 = AES0[t1 & 0xFF] ^ AES1[(t2 >> 8) & 0xFF] ^ AES2[(t3 >> 16) & 0xFF] ^ AES3[(t0 >> 24) & 0xFF];
            x2 = AES0[t2 & 0xFF] ^ AES1[(t3 >> 8) & 0xFF] ^ AES2[(t0 >> 16) & 0xFF] ^ AES3[(t1 >> 24) & 0xFF];
            x3 = AES0[t3 & 0xFF] ^ AES1[(t0 >> 8) & 0xFF] ^ AES2[(t1 >> 16) & 0xFF] ^ AES3[(t2 >> 24) & 0xFF];
            p4 ^= x0;
            p5 ^= x1;
            p6 ^= x2;
            p7 ^= x3;

            #endregion

            h0 ^= p8;
            h1 ^= p9;
            h2 ^= pa;
            h3 ^= pb;
            h4 ^= pc;
            h5 ^= pd;
            h6 ^= pe;
            h7 ^= pf;
            h8 ^= p0;
            h9 ^= p1;
            ha ^= p2;
            hb ^= p3;
            hc ^= p4;
            hd ^= p5;
            he ^= p6;
            hf ^= p7;
        }

        protected void Close(int size)
        {
            c0 += (uint)(bufOffset << 3);

            uint count0 = c0;
            uint count1 = c1;
            uint count2 = c2;
            uint count3 = c3;

            if (bufOffset == 0)
            {
                c0 = c1 = c2 = c3 = 0;
            }

            buffer[bufOffset++] = 0x80;
            if (bufOffset > 110)
            {
                while (bufOffset < 128)
                    buffer[bufOffset++] = 0;

                bufOffset = 0;
                ProcessBlock();

                c0 = c1 = c2 = c3 = 0;
            }

            while (bufOffset < 110)
                buffer[bufOffset++] = 0;

            GetBytes(count0, ByteOrder.LittleEndian, buffer, 110);
            GetBytes(count1, ByteOrder.LittleEndian, buffer, 114);
            GetBytes(count2, ByteOrder.LittleEndian, buffer, 118);
            GetBytes(count3, ByteOrder.LittleEndian, buffer, 122);

            buffer[126] = (byte)(size << 5);
            buffer[127] = (byte)(size >> 3);

            ProcessBlock();
        }
    }
}