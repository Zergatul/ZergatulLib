using System;
using static Zergatul.BitHelper;
using static Zergatul.Security.Zergatul.MessageDigest.HamsiConstants;

namespace Zergatul.Security.Zergatul.MessageDigest
{
    class Hamsi256 : Security.MessageDigest
    {
        public override int BlockLength => 4;
        public override int DigestLength => 32;

        private byte[] buffer;
        protected int bufOffset;
        protected uint h0, h1, h2, h3, h4, h5, h6, h7;
        protected ulong count;

        public Hamsi256()
        {
            buffer = new byte[4];
            Reset();
        }

        public override void Reset()
        {
            h0 = 0x76657273;
            h1 = 0x69746569;
            h2 = 0x74204C65;
            h3 = 0x7576656E;
            h4 = 0x2C204465;
            h5 = 0x70617274;
            h6 = 0x656D656E;
            h7 = 0x7420456C;

            bufOffset = 0;
            count = 0;
        }

        public override void Update(byte[] data, int offset, int length)
        {
            if (data == null)
                throw new ArgumentNullException(nameof(data));
            if (offset < 0 || offset > data.Length)
                throw new ArgumentOutOfRangeException(nameof(offset));
            if (length < 0 || offset + length > data.Length)
                throw new ArgumentOutOfRangeException(nameof(length));

            count += (ulong)length << 3;

            while (length > 0)
            {
                int copy = System.Math.Min(4 - bufOffset, length);
                Buffer.BlockCopy(data, offset, buffer, bufOffset, copy);

                offset += copy;
                length -= copy;
                bufOffset += copy;

                if (bufOffset == 4)
                {
                    bufOffset = 0;
                    ProcessBlock();
                }
            }
        }

        public override byte[] Digest()
        {
            buffer[bufOffset++] = 0x80;
            while (bufOffset < 4)
                buffer[bufOffset++] = 0;

            ProcessBlock();

            buffer[0] = (byte)(count >> 0x38);
            buffer[1] = (byte)(count >> 0x30);
            buffer[2] = (byte)(count >> 0x28);
            buffer[3] = (byte)(count >> 0x20);

            ProcessBlock();

            buffer[0] = (byte)(count >> 0x18);
            buffer[1] = (byte)(count >> 0x10);
            buffer[2] = (byte)(count >> 0x08);
            buffer[3] = (byte)(count >> 0x00);
            ProcessFinal();

            return InternalStateToDigest();
        }

        protected virtual byte[] InternalStateToDigest()
        {
            byte[] digest = new byte[32];
            GetBytes(h0, ByteOrder.BigEndian, digest, 0x00);
            GetBytes(h1, ByteOrder.BigEndian, digest, 0x04);
            GetBytes(h2, ByteOrder.BigEndian, digest, 0x08);
            GetBytes(h3, ByteOrder.BigEndian, digest, 0x0C);
            GetBytes(h4, ByteOrder.BigEndian, digest, 0x10);
            GetBytes(h5, ByteOrder.BigEndian, digest, 0x14);
            GetBytes(h6, ByteOrder.BigEndian, digest, 0x18);
            GetBytes(h7, ByteOrder.BigEndian, digest, 0x1C);
            return digest;
        }

        private void ProcessBlock()
        {
            uint c0 = h0;
            uint c1 = h1;
            uint c2 = h2;
            uint c3 = h3;
            uint c4 = h4;
            uint c5 = h5;
            uint c6 = h6;
            uint c7 = h7;

            uint[] rp;
            uint m0, m1, m2, m3, m4, m5, m6, m7;

            #region Input small

            rp = T256_0[buffer[0]];
            m0 = rp[0];
            m1 = rp[1];
            m2 = rp[2];
            m3 = rp[3];
            m4 = rp[4];
            m5 = rp[5];
            m6 = rp[6];
            m7 = rp[7];
            rp = T256_8[buffer[1]];
            m0 ^= rp[0];
            m1 ^= rp[1];
            m2 ^= rp[2];
            m3 ^= rp[3];
            m4 ^= rp[4];
            m5 ^= rp[5];
            m6 ^= rp[6];
            m7 ^= rp[7];
            rp = T256_16[buffer[2]];
            m0 ^= rp[0];
            m1 ^= rp[1];
            m2 ^= rp[2];
            m3 ^= rp[3];
            m4 ^= rp[4];
            m5 ^= rp[5];
            m6 ^= rp[6];
            m7 ^= rp[7];
            rp = T256_24[buffer[3]];
            m0 ^= rp[0];
            m1 ^= rp[1];
            m2 ^= rp[2];
            m3 ^= rp[3];
            m4 ^= rp[4];
            m5 ^= rp[5];
            m6 ^= rp[6];
            m7 ^= rp[7];

            #endregion

            #region P small

            uint t;

            m0 ^= 0xFF00F0F0;
            m1 ^= 0xCCCCAAAA ^ 0;
            c0 ^= 0xF0F0CCCC;
            c1 ^= 0xFF00AAAA;
            c2 ^= 0xF0F0CCCC;
            c3 ^= 0xAAAAFF00;
            m2 ^= 0xCCCCFF00;
            m3 ^= 0xAAAAF0F0;
            m4 ^= 0xCCCCAAAA;
            m5 ^= 0xFF00F0F0;
            c4 ^= 0xFF00AAAA;
            c5 ^= 0xF0F0CCCC;
            c6 ^= 0xAAAAFF00;
            c7 ^= 0xF0F0CCCC;
            m6 ^= 0xAAAAF0F0;
            m7 ^= 0xCCCCFF00;
            t = m0;
            m0 &= m4;
            m0 ^= c6;
            m4 ^= c2;
            m4 ^= m0;
            c6 |= t;
            c6 ^= c2;
            t ^= m4;
            c2 = c6;
            c6 |= t;
            c6 ^= m0;
            m0 &= c2;
            t ^= m0;
            c2 ^= c6;
            c2 ^= t;
            m0 = m4;
            m4 = c2;
            c2 = c6;
            c6 = ~t;
            t = m1;
            m1 &= m5;
            m1 ^= c7;
            m5 ^= c3;
            m5 ^= m1;
            c7 |= t;
            c7 ^= c3;
            t ^= m5;
            c3 = c7;
            c7 |= t;
            c7 ^= m1;
            m1 &= c3;
            t ^= m1;
            c3 ^= c7;
            c3 ^= t;
            m1 = m5;
            m5 = c3;
            c3 = c7;
            c7 = ~t;
            t = c0;
            c0 &= c4;
            c0 ^= m6;
            c4 ^= m2;
            c4 ^= c0;
            m6 |= t;
            m6 ^= m2;
            t ^= c4;
            m2 = m6;
            m6 |= t;
            m6 ^= c0;
            c0 &= m2;
            t ^= c0;
            m2 ^= m6;
            m2 ^= t;
            c0 = c4;
            c4 = m2;
            m2 = m6;
            m6 = ~t;
            t = c1;
            c1 &= c5;
            c1 ^= m7;
            c5 ^= m3;
            c5 ^= c1;
            m7 |= t;
            m7 ^= m3;
            t ^= c5;
            m3 = m7;
            m7 |= t;
            m7 ^= c1;
            c1 &= m3;
            t ^= c1;
            m3 ^= m7;
            m3 ^= t;
            c1 = c5;
            c5 = m3;
            m3 = m7;
            m7 = ~t;
            m0 = RotateLeft(m0, 13);
            c4 = RotateLeft(c4, 3);
            c3 ^= m0 ^ c4;
            m7 ^= c4 ^ (m0 << 3);
            c3 = RotateLeft(c3, 1);
            m7 = RotateLeft(m7, 7);
            m0 ^= c3 ^ m7;
            c4 ^= m7 ^ (c3 << 7);
            m0 = RotateLeft(m0, 5);
            c4 = RotateLeft(c4, 22);
            m1 = RotateLeft(m1, 13);
            c5 = RotateLeft(c5, 3);
            m2 ^= m1 ^ c5;
            c6 ^= c5 ^ (m1 << 3);
            m2 = RotateLeft(m2, 1);
            c6 = RotateLeft(c6, 7);
            m1 ^= m2 ^ c6;
            c5 ^= c6 ^ (m2 << 7);
            m1 = RotateLeft(m1, 5);
            c5 = RotateLeft(c5, 22);
            c0 = RotateLeft(c0, 13);
            m4 = RotateLeft(m4, 3);
            m3 ^= c0 ^ m4;
            c7 ^= m4 ^ (c0 << 3);
            m3 = RotateLeft(m3, 1);
            c7 = RotateLeft(c7, 7);
            c0 ^= m3 ^ c7;
            m4 ^= c7 ^ (m3 << 7);
            c0 = RotateLeft(c0, 5);
            m4 = RotateLeft(m4, 22);
            c1 = RotateLeft(c1, 13);
            m5 = RotateLeft(m5, 3);
            c2 ^= c1 ^ m5;
            m6 ^= m5 ^ (c1 << 3);
            c2 = RotateLeft(c2, 1);
            m6 = RotateLeft(m6, 7);
            c1 ^= c2 ^ m6;
            m5 ^= m6 ^ (c2 << 7);
            c1 = RotateLeft(c1, 5);
            m5 = RotateLeft(m5, 22);
            m0 ^= 0xFF00F0F0;
            m1 ^= 0xCCCCAAAA ^ 1;
            c0 ^= 0xF0F0CCCC;
            c1 ^= 0xFF00AAAA;
            c2 ^= 0xF0F0CCCC;
            c3 ^= 0xAAAAFF00;
            m2 ^= 0xCCCCFF00;
            m3 ^= 0xAAAAF0F0;
            m4 ^= 0xCCCCAAAA;
            m5 ^= 0xFF00F0F0;
            c4 ^= 0xFF00AAAA;
            c5 ^= 0xF0F0CCCC;
            c6 ^= 0xAAAAFF00;
            c7 ^= 0xF0F0CCCC;
            m6 ^= 0xAAAAF0F0;
            m7 ^= 0xCCCCFF00;
            t = m0;
            m0 &= m4;
            m0 ^= c6;
            m4 ^= c2;
            m4 ^= m0;
            c6 |= t;
            c6 ^= c2;
            t ^= m4;
            c2 = c6;
            c6 |= t;
            c6 ^= m0;
            m0 &= c2;
            t ^= m0;
            c2 ^= c6;
            c2 ^= t;
            m0 = m4;
            m4 = c2;
            c2 = c6;
            c6 = ~t;
            t = m1;
            m1 &= m5;
            m1 ^= c7;
            m5 ^= c3;
            m5 ^= m1;
            c7 |= t;
            c7 ^= c3;
            t ^= m5;
            c3 = c7;
            c7 |= t;
            c7 ^= m1;
            m1 &= c3;
            t ^= m1;
            c3 ^= c7;
            c3 ^= t;
            m1 = m5;
            m5 = c3;
            c3 = c7;
            c7 = ~t;
            t = c0;
            c0 &= c4;
            c0 ^= m6;
            c4 ^= m2;
            c4 ^= c0;
            m6 |= t;
            m6 ^= m2;
            t ^= c4;
            m2 = m6;
            m6 |= t;
            m6 ^= c0;
            c0 &= m2;
            t ^= c0;
            m2 ^= m6;
            m2 ^= t;
            c0 = c4;
            c4 = m2;
            m2 = m6;
            m6 = ~t;
            t = c1;
            c1 &= c5;
            c1 ^= m7;
            c5 ^= m3;
            c5 ^= c1;
            m7 |= t;
            m7 ^= m3;
            t ^= c5;
            m3 = m7;
            m7 |= t;
            m7 ^= c1;
            c1 &= m3;
            t ^= c1;
            m3 ^= m7;
            m3 ^= t;
            c1 = c5;
            c5 = m3;
            m3 = m7;
            m7 = ~t;
            m0 = RotateLeft(m0, 13);
            c4 = RotateLeft(c4, 3);
            c3 ^= m0 ^ c4;
            m7 ^= c4 ^ (m0 << 3);
            c3 = RotateLeft(c3, 1);
            m7 = RotateLeft(m7, 7);
            m0 ^= c3 ^ m7;
            c4 ^= m7 ^ (c3 << 7);
            m0 = RotateLeft(m0, 5);
            c4 = RotateLeft(c4, 22);
            m1 = RotateLeft(m1, 13);
            c5 = RotateLeft(c5, 3);
            m2 ^= m1 ^ c5;
            c6 ^= c5 ^ (m1 << 3);
            m2 = RotateLeft(m2, 1);
            c6 = RotateLeft(c6, 7);
            m1 ^= m2 ^ c6;
            c5 ^= c6 ^ (m2 << 7);
            m1 = RotateLeft(m1, 5);
            c5 = RotateLeft(c5, 22);
            c0 = RotateLeft(c0, 13);
            m4 = RotateLeft(m4, 3);
            m3 ^= c0 ^ m4;
            c7 ^= m4 ^ (c0 << 3);
            m3 = RotateLeft(m3, 1);
            c7 = RotateLeft(c7, 7);
            c0 ^= m3 ^ c7;
            m4 ^= c7 ^ (m3 << 7);
            c0 = RotateLeft(c0, 5);
            m4 = RotateLeft(m4, 22);
            c1 = RotateLeft(c1, 13);
            m5 = RotateLeft(m5, 3);
            c2 ^= c1 ^ m5;
            m6 ^= m5 ^ (c1 << 3);
            c2 = RotateLeft(c2, 1);
            m6 = RotateLeft(m6, 7);
            c1 ^= c2 ^ m6;
            m5 ^= m6 ^ (c2 << 7);
            c1 = RotateLeft(c1, 5);
            m5 = RotateLeft(m5, 22);
            m0 ^= 0xFF00F0F0;
            m1 ^= 0xCCCCAAAA ^ 2;
            c0 ^= 0xF0F0CCCC;
            c1 ^= 0xFF00AAAA;
            c2 ^= 0xF0F0CCCC;
            c3 ^= 0xAAAAFF00;
            m2 ^= 0xCCCCFF00;
            m3 ^= 0xAAAAF0F0;
            m4 ^= 0xCCCCAAAA;
            m5 ^= 0xFF00F0F0;
            c4 ^= 0xFF00AAAA;
            c5 ^= 0xF0F0CCCC;
            c6 ^= 0xAAAAFF00;
            c7 ^= 0xF0F0CCCC;
            m6 ^= 0xAAAAF0F0;
            m7 ^= 0xCCCCFF00;
            t = m0;
            m0 &= m4;
            m0 ^= c6;
            m4 ^= c2;
            m4 ^= m0;
            c6 |= t;
            c6 ^= c2;
            t ^= m4;
            c2 = c6;
            c6 |= t;
            c6 ^= m0;
            m0 &= c2;
            t ^= m0;
            c2 ^= c6;
            c2 ^= t;
            m0 = m4;
            m4 = c2;
            c2 = c6;
            c6 = ~t;
            t = m1;
            m1 &= m5;
            m1 ^= c7;
            m5 ^= c3;
            m5 ^= m1;
            c7 |= t;
            c7 ^= c3;
            t ^= m5;
            c3 = c7;
            c7 |= t;
            c7 ^= m1;
            m1 &= c3;
            t ^= m1;
            c3 ^= c7;
            c3 ^= t;
            m1 = m5;
            m5 = c3;
            c3 = c7;
            c7 = ~t;
            t = c0;
            c0 &= c4;
            c0 ^= m6;
            c4 ^= m2;
            c4 ^= c0;
            m6 |= t;
            m6 ^= m2;
            t ^= c4;
            m2 = m6;
            m6 |= t;
            m6 ^= c0;
            c0 &= m2;
            t ^= c0;
            m2 ^= m6;
            m2 ^= t;
            c0 = c4;
            c4 = m2;
            m2 = m6;
            m6 = ~t;
            t = c1;
            c1 &= c5;
            c1 ^= m7;
            c5 ^= m3;
            c5 ^= c1;
            m7 |= t;
            m7 ^= m3;
            t ^= c5;
            m3 = m7;
            m7 |= t;
            m7 ^= c1;
            c1 &= m3;
            t ^= c1;
            m3 ^= m7;
            m3 ^= t;
            c1 = c5;
            c5 = m3;
            m3 = m7;
            m7 = ~t;
            m0 = RotateLeft(m0, 13);
            c4 = RotateLeft(c4, 3);
            c3 ^= m0 ^ c4;
            m7 ^= c4 ^ (m0 << 3);
            c3 = RotateLeft(c3, 1);
            m7 = RotateLeft(m7, 7);
            m0 ^= c3 ^ m7;
            c4 ^= m7 ^ (c3 << 7);
            m0 = RotateLeft(m0, 5);
            c4 = RotateLeft(c4, 22);
            m1 = RotateLeft(m1, 13);
            c5 = RotateLeft(c5, 3);
            m2 ^= m1 ^ c5;
            c6 ^= c5 ^ (m1 << 3);
            m2 = RotateLeft(m2, 1);
            c6 = RotateLeft(c6, 7);
            m1 ^= m2 ^ c6;
            c5 ^= c6 ^ (m2 << 7);
            m1 = RotateLeft(m1, 5);
            c5 = RotateLeft(c5, 22);
            c0 = RotateLeft(c0, 13);
            m4 = RotateLeft(m4, 3);
            m3 ^= c0 ^ m4;
            c7 ^= m4 ^ (c0 << 3);
            m3 = RotateLeft(m3, 1);
            c7 = RotateLeft(c7, 7);
            c0 ^= m3 ^ c7;
            m4 ^= c7 ^ (m3 << 7);
            c0 = RotateLeft(c0, 5);
            m4 = RotateLeft(m4, 22);
            c1 = RotateLeft(c1, 13);
            m5 = RotateLeft(m5, 3);
            c2 ^= c1 ^ m5;
            m6 ^= m5 ^ (c1 << 3);
            c2 = RotateLeft(c2, 1);
            m6 = RotateLeft(m6, 7);
            c1 ^= c2 ^ m6;
            m5 ^= m6 ^ (c2 << 7);
            c1 = RotateLeft(c1, 5);
            m5 = RotateLeft(m5, 22);

            #endregion

            #region T small

            c7 = h7 ^= c5;
            c6 = h6 ^= c4;
            c5 = h5 ^= m5;
            c4 = h4 ^= m4;
            c3 = h3 ^= c1;
            c2 = h2 ^= c0;
            c1 = h1 ^= m1;
            c0 = h0 ^= m0;

            #endregion

            h0 = c0;
            h1 = c1;
            h2 = c2;
            h3 = c3;
            h4 = c4;
            h5 = c5;
            h6 = c6;
            h7 = c7;
        }

        private void ProcessFinal()
        {
            uint c0 = h0;
            uint c1 = h1;
            uint c2 = h2;
            uint c3 = h3;
            uint c4 = h4;
            uint c5 = h5;
            uint c6 = h6;
            uint c7 = h7;

            uint[] rp;
            uint m0, m1, m2, m3, m4, m5, m6, m7;

            #region Input small

            rp = T256_0[buffer[0]];
            m0 = rp[0];
            m1 = rp[1];
            m2 = rp[2];
            m3 = rp[3];
            m4 = rp[4];
            m5 = rp[5];
            m6 = rp[6];
            m7 = rp[7];
            rp = T256_8[buffer[1]];
            m0 ^= rp[0];
            m1 ^= rp[1];
            m2 ^= rp[2];
            m3 ^= rp[3];
            m4 ^= rp[4];
            m5 ^= rp[5];
            m6 ^= rp[6];
            m7 ^= rp[7];
            rp = T256_16[buffer[2]];
            m0 ^= rp[0];
            m1 ^= rp[1];
            m2 ^= rp[2];
            m3 ^= rp[3];
            m4 ^= rp[4];
            m5 ^= rp[5];
            m6 ^= rp[6];
            m7 ^= rp[7];
            rp = T256_24[buffer[3]];
            m0 ^= rp[0];
            m1 ^= rp[1];
            m2 ^= rp[2];
            m3 ^= rp[3];
            m4 ^= rp[4];
            m5 ^= rp[5];
            m6 ^= rp[6];
            m7 ^= rp[7];

            #endregion

            #region PF big

            uint t;

            m0 ^= 0xCAF9639C;
            m1 ^= 0x0FF0F9C0 ^ 0;
            c0 ^= 0x639C0FF0;
            c1 ^= 0xCAF9F9C0;
            c2 ^= 0x639C0FF0;
            c3 ^= 0xF9C0CAF9;
            m2 ^= 0x0FF0CAF9;
            m3 ^= 0xF9C0639C;
            m4 ^= 0x0FF0F9C0;
            m5 ^= 0xCAF9639C;
            c4 ^= 0xCAF9F9C0;
            c5 ^= 0x639C0FF0;
            c6 ^= 0xF9C0CAF9;
            c7 ^= 0x639C0FF0;
            m6 ^= 0xF9C0639C;
            m7 ^= 0x0FF0CAF9;
            t = m0;
            m0 &= m4;
            m0 ^= c6;
            m4 ^= c2;
            m4 ^= m0;
            c6 |= t;
            c6 ^= c2;
            t ^= m4;
            c2 = c6;
            c6 |= t;
            c6 ^= m0;
            m0 &= c2;
            t ^= m0;
            c2 ^= c6;
            c2 ^= t;
            m0 = m4;
            m4 = c2;
            c2 = c6;
            c6 = ~t;
            t = m1;
            m1 &= m5;
            m1 ^= c7;
            m5 ^= c3;
            m5 ^= m1;
            c7 |= t;
            c7 ^= c3;
            t ^= m5;
            c3 = c7;
            c7 |= t;
            c7 ^= m1;
            m1 &= c3;
            t ^= m1;
            c3 ^= c7;
            c3 ^= t;
            m1 = m5;
            m5 = c3;
            c3 = c7;
            c7 = ~t;
            t = c0;
            c0 &= c4;
            c0 ^= m6;
            c4 ^= m2;
            c4 ^= c0;
            m6 |= t;
            m6 ^= m2;
            t ^= c4;
            m2 = m6;
            m6 |= t;
            m6 ^= c0;
            c0 &= m2;
            t ^= c0;
            m2 ^= m6;
            m2 ^= t;
            c0 = c4;
            c4 = m2;
            m2 = m6;
            m6 = ~t;
            t = c1;
            c1 &= c5;
            c1 ^= m7;
            c5 ^= m3;
            c5 ^= c1;
            m7 |= t;
            m7 ^= m3;
            t ^= c5;
            m3 = m7;
            m7 |= t;
            m7 ^= c1;
            c1 &= m3;
            t ^= c1;
            m3 ^= m7;
            m3 ^= t;
            c1 = c5;
            c5 = m3;
            m3 = m7;
            m7 = ~t;
            m0 = RotateLeft(m0, 13);
            c4 = RotateLeft(c4, 3);
            c3 ^= m0 ^ c4;
            m7 ^= c4 ^ (m0 << 3);
            c3 = RotateLeft(c3, 1);
            m7 = RotateLeft(m7, 7);
            m0 ^= c3 ^ m7;
            c4 ^= m7 ^ (c3 << 7);
            m0 = RotateLeft(m0, 5);
            c4 = RotateLeft(c4, 22);
            m1 = RotateLeft(m1, 13);
            c5 = RotateLeft(c5, 3);
            m2 ^= m1 ^ c5;
            c6 ^= c5 ^ (m1 << 3);
            m2 = RotateLeft(m2, 1);
            c6 = RotateLeft(c6, 7);
            m1 ^= m2 ^ c6;
            c5 ^= c6 ^ (m2 << 7);
            m1 = RotateLeft(m1, 5);
            c5 = RotateLeft(c5, 22);
            c0 = RotateLeft(c0, 13);
            m4 = RotateLeft(m4, 3);
            m3 ^= c0 ^ m4;
            c7 ^= m4 ^ (c0 << 3);
            m3 = RotateLeft(m3, 1);
            c7 = RotateLeft(c7, 7);
            c0 ^= m3 ^ c7;
            m4 ^= c7 ^ (m3 << 7);
            c0 = RotateLeft(c0, 5);
            m4 = RotateLeft(m4, 22);
            c1 = RotateLeft(c1, 13);
            m5 = RotateLeft(m5, 3);
            c2 ^= c1 ^ m5;
            m6 ^= m5 ^ (c1 << 3);
            c2 = RotateLeft(c2, 1);
            m6 = RotateLeft(m6, 7);
            c1 ^= c2 ^ m6;
            m5 ^= m6 ^ (c2 << 7);
            c1 = RotateLeft(c1, 5);
            m5 = RotateLeft(m5, 22);
            m0 ^= 0xCAF9639C;
            m1 ^= 0x0FF0F9C0 ^ 1;
            c0 ^= 0x639C0FF0;
            c1 ^= 0xCAF9F9C0;
            c2 ^= 0x639C0FF0;
            c3 ^= 0xF9C0CAF9;
            m2 ^= 0x0FF0CAF9;
            m3 ^= 0xF9C0639C;
            m4 ^= 0x0FF0F9C0;
            m5 ^= 0xCAF9639C;
            c4 ^= 0xCAF9F9C0;
            c5 ^= 0x639C0FF0;
            c6 ^= 0xF9C0CAF9;
            c7 ^= 0x639C0FF0;
            m6 ^= 0xF9C0639C;
            m7 ^= 0x0FF0CAF9;
            t = m0;
            m0 &= m4;
            m0 ^= c6;
            m4 ^= c2;
            m4 ^= m0;
            c6 |= t;
            c6 ^= c2;
            t ^= m4;
            c2 = c6;
            c6 |= t;
            c6 ^= m0;
            m0 &= c2;
            t ^= m0;
            c2 ^= c6;
            c2 ^= t;
            m0 = m4;
            m4 = c2;
            c2 = c6;
            c6 = ~t;
            t = m1;
            m1 &= m5;
            m1 ^= c7;
            m5 ^= c3;
            m5 ^= m1;
            c7 |= t;
            c7 ^= c3;
            t ^= m5;
            c3 = c7;
            c7 |= t;
            c7 ^= m1;
            m1 &= c3;
            t ^= m1;
            c3 ^= c7;
            c3 ^= t;
            m1 = m5;
            m5 = c3;
            c3 = c7;
            c7 = ~t;
            t = c0;
            c0 &= c4;
            c0 ^= m6;
            c4 ^= m2;
            c4 ^= c0;
            m6 |= t;
            m6 ^= m2;
            t ^= c4;
            m2 = m6;
            m6 |= t;
            m6 ^= c0;
            c0 &= m2;
            t ^= c0;
            m2 ^= m6;
            m2 ^= t;
            c0 = c4;
            c4 = m2;
            m2 = m6;
            m6 = ~t;
            t = c1;
            c1 &= c5;
            c1 ^= m7;
            c5 ^= m3;
            c5 ^= c1;
            m7 |= t;
            m7 ^= m3;
            t ^= c5;
            m3 = m7;
            m7 |= t;
            m7 ^= c1;
            c1 &= m3;
            t ^= c1;
            m3 ^= m7;
            m3 ^= t;
            c1 = c5;
            c5 = m3;
            m3 = m7;
            m7 = ~t;
            m0 = RotateLeft(m0, 13);
            c4 = RotateLeft(c4, 3);
            c3 ^= m0 ^ c4;
            m7 ^= c4 ^ (m0 << 3);
            c3 = RotateLeft(c3, 1);
            m7 = RotateLeft(m7, 7);
            m0 ^= c3 ^ m7;
            c4 ^= m7 ^ (c3 << 7);
            m0 = RotateLeft(m0, 5);
            c4 = RotateLeft(c4, 22);
            m1 = RotateLeft(m1, 13);
            c5 = RotateLeft(c5, 3);
            m2 ^= m1 ^ c5;
            c6 ^= c5 ^ (m1 << 3);
            m2 = RotateLeft(m2, 1);
            c6 = RotateLeft(c6, 7);
            m1 ^= m2 ^ c6;
            c5 ^= c6 ^ (m2 << 7);
            m1 = RotateLeft(m1, 5);
            c5 = RotateLeft(c5, 22);
            c0 = RotateLeft(c0, 13);
            m4 = RotateLeft(m4, 3);
            m3 ^= c0 ^ m4;
            c7 ^= m4 ^ (c0 << 3);
            m3 = RotateLeft(m3, 1);
            c7 = RotateLeft(c7, 7);
            c0 ^= m3 ^ c7;
            m4 ^= c7 ^ (m3 << 7);
            c0 = RotateLeft(c0, 5);
            m4 = RotateLeft(m4, 22);
            c1 = RotateLeft(c1, 13);
            m5 = RotateLeft(m5, 3);
            c2 ^= c1 ^ m5;
            m6 ^= m5 ^ (c1 << 3);
            c2 = RotateLeft(c2, 1);
            m6 = RotateLeft(m6, 7);
            c1 ^= c2 ^ m6;
            m5 ^= m6 ^ (c2 << 7);
            c1 = RotateLeft(c1, 5);
            m5 = RotateLeft(m5, 22);
            m0 ^= 0xCAF9639C;
            m1 ^= 0x0FF0F9C0 ^ 2;
            c0 ^= 0x639C0FF0;
            c1 ^= 0xCAF9F9C0;
            c2 ^= 0x639C0FF0;
            c3 ^= 0xF9C0CAF9;
            m2 ^= 0x0FF0CAF9;
            m3 ^= 0xF9C0639C;
            m4 ^= 0x0FF0F9C0;
            m5 ^= 0xCAF9639C;
            c4 ^= 0xCAF9F9C0;
            c5 ^= 0x639C0FF0;
            c6 ^= 0xF9C0CAF9;
            c7 ^= 0x639C0FF0;
            m6 ^= 0xF9C0639C;
            m7 ^= 0x0FF0CAF9;
            t = m0;
            m0 &= m4;
            m0 ^= c6;
            m4 ^= c2;
            m4 ^= m0;
            c6 |= t;
            c6 ^= c2;
            t ^= m4;
            c2 = c6;
            c6 |= t;
            c6 ^= m0;
            m0 &= c2;
            t ^= m0;
            c2 ^= c6;
            c2 ^= t;
            m0 = m4;
            m4 = c2;
            c2 = c6;
            c6 = ~t;
            t = m1;
            m1 &= m5;
            m1 ^= c7;
            m5 ^= c3;
            m5 ^= m1;
            c7 |= t;
            c7 ^= c3;
            t ^= m5;
            c3 = c7;
            c7 |= t;
            c7 ^= m1;
            m1 &= c3;
            t ^= m1;
            c3 ^= c7;
            c3 ^= t;
            m1 = m5;
            m5 = c3;
            c3 = c7;
            c7 = ~t;
            t = c0;
            c0 &= c4;
            c0 ^= m6;
            c4 ^= m2;
            c4 ^= c0;
            m6 |= t;
            m6 ^= m2;
            t ^= c4;
            m2 = m6;
            m6 |= t;
            m6 ^= c0;
            c0 &= m2;
            t ^= c0;
            m2 ^= m6;
            m2 ^= t;
            c0 = c4;
            c4 = m2;
            m2 = m6;
            m6 = ~t;
            t = c1;
            c1 &= c5;
            c1 ^= m7;
            c5 ^= m3;
            c5 ^= c1;
            m7 |= t;
            m7 ^= m3;
            t ^= c5;
            m3 = m7;
            m7 |= t;
            m7 ^= c1;
            c1 &= m3;
            t ^= c1;
            m3 ^= m7;
            m3 ^= t;
            c1 = c5;
            c5 = m3;
            m3 = m7;
            m7 = ~t;
            m0 = RotateLeft(m0, 13);
            c4 = RotateLeft(c4, 3);
            c3 ^= m0 ^ c4;
            m7 ^= c4 ^ (m0 << 3);
            c3 = RotateLeft(c3, 1);
            m7 = RotateLeft(m7, 7);
            m0 ^= c3 ^ m7;
            c4 ^= m7 ^ (c3 << 7);
            m0 = RotateLeft(m0, 5);
            c4 = RotateLeft(c4, 22);
            m1 = RotateLeft(m1, 13);
            c5 = RotateLeft(c5, 3);
            m2 ^= m1 ^ c5;
            c6 ^= c5 ^ (m1 << 3);
            m2 = RotateLeft(m2, 1);
            c6 = RotateLeft(c6, 7);
            m1 ^= m2 ^ c6;
            c5 ^= c6 ^ (m2 << 7);
            m1 = RotateLeft(m1, 5);
            c5 = RotateLeft(c5, 22);
            c0 = RotateLeft(c0, 13);
            m4 = RotateLeft(m4, 3);
            m3 ^= c0 ^ m4;
            c7 ^= m4 ^ (c0 << 3);
            m3 = RotateLeft(m3, 1);
            c7 = RotateLeft(c7, 7);
            c0 ^= m3 ^ c7;
            m4 ^= c7 ^ (m3 << 7);
            c0 = RotateLeft(c0, 5);
            m4 = RotateLeft(m4, 22);
            c1 = RotateLeft(c1, 13);
            m5 = RotateLeft(m5, 3);
            c2 ^= c1 ^ m5;
            m6 ^= m5 ^ (c1 << 3);
            c2 = RotateLeft(c2, 1);
            m6 = RotateLeft(m6, 7);
            c1 ^= c2 ^ m6;
            m5 ^= m6 ^ (c2 << 7);
            c1 = RotateLeft(c1, 5);
            m5 = RotateLeft(m5, 22);
            m0 ^= 0xCAF9639C;
            m1 ^= 0x0FF0F9C0 ^ 3;
            c0 ^= 0x639C0FF0;
            c1 ^= 0xCAF9F9C0;
            c2 ^= 0x639C0FF0;
            c3 ^= 0xF9C0CAF9;
            m2 ^= 0x0FF0CAF9;
            m3 ^= 0xF9C0639C;
            m4 ^= 0x0FF0F9C0;
            m5 ^= 0xCAF9639C;
            c4 ^= 0xCAF9F9C0;
            c5 ^= 0x639C0FF0;
            c6 ^= 0xF9C0CAF9;
            c7 ^= 0x639C0FF0;
            m6 ^= 0xF9C0639C;
            m7 ^= 0x0FF0CAF9;
            t = m0;
            m0 &= m4;
            m0 ^= c6;
            m4 ^= c2;
            m4 ^= m0;
            c6 |= t;
            c6 ^= c2;
            t ^= m4;
            c2 = c6;
            c6 |= t;
            c6 ^= m0;
            m0 &= c2;
            t ^= m0;
            c2 ^= c6;
            c2 ^= t;
            m0 = m4;
            m4 = c2;
            c2 = c6;
            c6 = ~t;
            t = m1;
            m1 &= m5;
            m1 ^= c7;
            m5 ^= c3;
            m5 ^= m1;
            c7 |= t;
            c7 ^= c3;
            t ^= m5;
            c3 = c7;
            c7 |= t;
            c7 ^= m1;
            m1 &= c3;
            t ^= m1;
            c3 ^= c7;
            c3 ^= t;
            m1 = m5;
            m5 = c3;
            c3 = c7;
            c7 = ~t;
            t = c0;
            c0 &= c4;
            c0 ^= m6;
            c4 ^= m2;
            c4 ^= c0;
            m6 |= t;
            m6 ^= m2;
            t ^= c4;
            m2 = m6;
            m6 |= t;
            m6 ^= c0;
            c0 &= m2;
            t ^= c0;
            m2 ^= m6;
            m2 ^= t;
            c0 = c4;
            c4 = m2;
            m2 = m6;
            m6 = ~t;
            t = c1;
            c1 &= c5;
            c1 ^= m7;
            c5 ^= m3;
            c5 ^= c1;
            m7 |= t;
            m7 ^= m3;
            t ^= c5;
            m3 = m7;
            m7 |= t;
            m7 ^= c1;
            c1 &= m3;
            t ^= c1;
            m3 ^= m7;
            m3 ^= t;
            c1 = c5;
            c5 = m3;
            m3 = m7;
            m7 = ~t;
            m0 = RotateLeft(m0, 13);
            c4 = RotateLeft(c4, 3);
            c3 ^= m0 ^ c4;
            m7 ^= c4 ^ (m0 << 3);
            c3 = RotateLeft(c3, 1);
            m7 = RotateLeft(m7, 7);
            m0 ^= c3 ^ m7;
            c4 ^= m7 ^ (c3 << 7);
            m0 = RotateLeft(m0, 5);
            c4 = RotateLeft(c4, 22);
            m1 = RotateLeft(m1, 13);
            c5 = RotateLeft(c5, 3);
            m2 ^= m1 ^ c5;
            c6 ^= c5 ^ (m1 << 3);
            m2 = RotateLeft(m2, 1);
            c6 = RotateLeft(c6, 7);
            m1 ^= m2 ^ c6;
            c5 ^= c6 ^ (m2 << 7);
            m1 = RotateLeft(m1, 5);
            c5 = RotateLeft(c5, 22);
            c0 = RotateLeft(c0, 13);
            m4 = RotateLeft(m4, 3);
            m3 ^= c0 ^ m4;
            c7 ^= m4 ^ (c0 << 3);
            m3 = RotateLeft(m3, 1);
            c7 = RotateLeft(c7, 7);
            c0 ^= m3 ^ c7;
            m4 ^= c7 ^ (m3 << 7);
            c0 = RotateLeft(c0, 5);
            m4 = RotateLeft(m4, 22);
            c1 = RotateLeft(c1, 13);
            m5 = RotateLeft(m5, 3);
            c2 ^= c1 ^ m5;
            m6 ^= m5 ^ (c1 << 3);
            c2 = RotateLeft(c2, 1);
            m6 = RotateLeft(m6, 7);
            c1 ^= c2 ^ m6;
            m5 ^= m6 ^ (c2 << 7);
            c1 = RotateLeft(c1, 5);
            m5 = RotateLeft(m5, 22);
            m0 ^= 0xCAF9639C;
            m1 ^= 0x0FF0F9C0 ^ 4;
            c0 ^= 0x639C0FF0;
            c1 ^= 0xCAF9F9C0;
            c2 ^= 0x639C0FF0;
            c3 ^= 0xF9C0CAF9;
            m2 ^= 0x0FF0CAF9;
            m3 ^= 0xF9C0639C;
            m4 ^= 0x0FF0F9C0;
            m5 ^= 0xCAF9639C;
            c4 ^= 0xCAF9F9C0;
            c5 ^= 0x639C0FF0;
            c6 ^= 0xF9C0CAF9;
            c7 ^= 0x639C0FF0;
            m6 ^= 0xF9C0639C;
            m7 ^= 0x0FF0CAF9;
            t = m0;
            m0 &= m4;
            m0 ^= c6;
            m4 ^= c2;
            m4 ^= m0;
            c6 |= t;
            c6 ^= c2;
            t ^= m4;
            c2 = c6;
            c6 |= t;
            c6 ^= m0;
            m0 &= c2;
            t ^= m0;
            c2 ^= c6;
            c2 ^= t;
            m0 = m4;
            m4 = c2;
            c2 = c6;
            c6 = ~t;
            t = m1;
            m1 &= m5;
            m1 ^= c7;
            m5 ^= c3;
            m5 ^= m1;
            c7 |= t;
            c7 ^= c3;
            t ^= m5;
            c3 = c7;
            c7 |= t;
            c7 ^= m1;
            m1 &= c3;
            t ^= m1;
            c3 ^= c7;
            c3 ^= t;
            m1 = m5;
            m5 = c3;
            c3 = c7;
            c7 = ~t;
            t = c0;
            c0 &= c4;
            c0 ^= m6;
            c4 ^= m2;
            c4 ^= c0;
            m6 |= t;
            m6 ^= m2;
            t ^= c4;
            m2 = m6;
            m6 |= t;
            m6 ^= c0;
            c0 &= m2;
            t ^= c0;
            m2 ^= m6;
            m2 ^= t;
            c0 = c4;
            c4 = m2;
            m2 = m6;
            m6 = ~t;
            t = c1;
            c1 &= c5;
            c1 ^= m7;
            c5 ^= m3;
            c5 ^= c1;
            m7 |= t;
            m7 ^= m3;
            t ^= c5;
            m3 = m7;
            m7 |= t;
            m7 ^= c1;
            c1 &= m3;
            t ^= c1;
            m3 ^= m7;
            m3 ^= t;
            c1 = c5;
            c5 = m3;
            m3 = m7;
            m7 = ~t;
            m0 = RotateLeft(m0, 13);
            c4 = RotateLeft(c4, 3);
            c3 ^= m0 ^ c4;
            m7 ^= c4 ^ (m0 << 3);
            c3 = RotateLeft(c3, 1);
            m7 = RotateLeft(m7, 7);
            m0 ^= c3 ^ m7;
            c4 ^= m7 ^ (c3 << 7);
            m0 = RotateLeft(m0, 5);
            c4 = RotateLeft(c4, 22);
            m1 = RotateLeft(m1, 13);
            c5 = RotateLeft(c5, 3);
            m2 ^= m1 ^ c5;
            c6 ^= c5 ^ (m1 << 3);
            m2 = RotateLeft(m2, 1);
            c6 = RotateLeft(c6, 7);
            m1 ^= m2 ^ c6;
            c5 ^= c6 ^ (m2 << 7);
            m1 = RotateLeft(m1, 5);
            c5 = RotateLeft(c5, 22);
            c0 = RotateLeft(c0, 13);
            m4 = RotateLeft(m4, 3);
            m3 ^= c0 ^ m4;
            c7 ^= m4 ^ (c0 << 3);
            m3 = RotateLeft(m3, 1);
            c7 = RotateLeft(c7, 7);
            c0 ^= m3 ^ c7;
            m4 ^= c7 ^ (m3 << 7);
            c0 = RotateLeft(c0, 5);
            m4 = RotateLeft(m4, 22);
            c1 = RotateLeft(c1, 13);
            m5 = RotateLeft(m5, 3);
            c2 ^= c1 ^ m5;
            m6 ^= m5 ^ (c1 << 3);
            c2 = RotateLeft(c2, 1);
            m6 = RotateLeft(m6, 7);
            c1 ^= c2 ^ m6;
            m5 ^= m6 ^ (c2 << 7);
            c1 = RotateLeft(c1, 5);
            m5 = RotateLeft(m5, 22);
            m0 ^= 0xCAF9639C;
            m1 ^= 0x0FF0F9C0 ^ 5;
            c0 ^= 0x639C0FF0;
            c1 ^= 0xCAF9F9C0;
            c2 ^= 0x639C0FF0;
            c3 ^= 0xF9C0CAF9;
            m2 ^= 0x0FF0CAF9;
            m3 ^= 0xF9C0639C;
            m4 ^= 0x0FF0F9C0;
            m5 ^= 0xCAF9639C;
            c4 ^= 0xCAF9F9C0;
            c5 ^= 0x639C0FF0;
            c6 ^= 0xF9C0CAF9;
            c7 ^= 0x639C0FF0;
            m6 ^= 0xF9C0639C;
            m7 ^= 0x0FF0CAF9;
            t = m0;
            m0 &= m4;
            m0 ^= c6;
            m4 ^= c2;
            m4 ^= m0;
            c6 |= t;
            c6 ^= c2;
            t ^= m4;
            c2 = c6;
            c6 |= t;
            c6 ^= m0;
            m0 &= c2;
            t ^= m0;
            c2 ^= c6;
            c2 ^= t;
            m0 = m4;
            m4 = c2;
            c2 = c6;
            c6 = ~t;
            t = m1;
            m1 &= m5;
            m1 ^= c7;
            m5 ^= c3;
            m5 ^= m1;
            c7 |= t;
            c7 ^= c3;
            t ^= m5;
            c3 = c7;
            c7 |= t;
            c7 ^= m1;
            m1 &= c3;
            t ^= m1;
            c3 ^= c7;
            c3 ^= t;
            m1 = m5;
            m5 = c3;
            c3 = c7;
            c7 = ~t;
            t = c0;
            c0 &= c4;
            c0 ^= m6;
            c4 ^= m2;
            c4 ^= c0;
            m6 |= t;
            m6 ^= m2;
            t ^= c4;
            m2 = m6;
            m6 |= t;
            m6 ^= c0;
            c0 &= m2;
            t ^= c0;
            m2 ^= m6;
            m2 ^= t;
            c0 = c4;
            c4 = m2;
            m2 = m6;
            m6 = ~t;
            t = c1;
            c1 &= c5;
            c1 ^= m7;
            c5 ^= m3;
            c5 ^= c1;
            m7 |= t;
            m7 ^= m3;
            t ^= c5;
            m3 = m7;
            m7 |= t;
            m7 ^= c1;
            c1 &= m3;
            t ^= c1;
            m3 ^= m7;
            m3 ^= t;
            c1 = c5;
            c5 = m3;
            m3 = m7;
            m7 = ~t;
            m0 = RotateLeft(m0, 13);
            c4 = RotateLeft(c4, 3);
            c3 ^= m0 ^ c4;
            m7 ^= c4 ^ (m0 << 3);
            c3 = RotateLeft(c3, 1);
            m7 = RotateLeft(m7, 7);
            m0 ^= c3 ^ m7;
            c4 ^= m7 ^ (c3 << 7);
            m0 = RotateLeft(m0, 5);
            c4 = RotateLeft(c4, 22);
            m1 = RotateLeft(m1, 13);
            c5 = RotateLeft(c5, 3);
            m2 ^= m1 ^ c5;
            c6 ^= c5 ^ (m1 << 3);
            m2 = RotateLeft(m2, 1);
            c6 = RotateLeft(c6, 7);
            m1 ^= m2 ^ c6;
            c5 ^= c6 ^ (m2 << 7);
            m1 = RotateLeft(m1, 5);
            c5 = RotateLeft(c5, 22);
            c0 = RotateLeft(c0, 13);
            m4 = RotateLeft(m4, 3);
            m3 ^= c0 ^ m4;
            c7 ^= m4 ^ (c0 << 3);
            m3 = RotateLeft(m3, 1);
            c7 = RotateLeft(c7, 7);
            c0 ^= m3 ^ c7;
            m4 ^= c7 ^ (m3 << 7);
            c0 = RotateLeft(c0, 5);
            m4 = RotateLeft(m4, 22);
            c1 = RotateLeft(c1, 13);
            m5 = RotateLeft(m5, 3);
            c2 ^= c1 ^ m5;
            m6 ^= m5 ^ (c1 << 3);
            c2 = RotateLeft(c2, 1);
            m6 = RotateLeft(m6, 7);
            c1 ^= c2 ^ m6;
            m5 ^= m6 ^ (c2 << 7);
            c1 = RotateLeft(c1, 5);
            m5 = RotateLeft(m5, 22);

            #endregion

            #region T small

            h7 ^= c5;
            h6 ^= c4;
            h5 ^= m5;
            h4 ^= m4;
            h3 ^= c1;
            h2 ^= c0;
            h1 ^= m1;
            h0 ^= m0;

            #endregion
        }
    }
}