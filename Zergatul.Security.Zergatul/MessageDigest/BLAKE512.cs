using System;
using static Zergatul.BitHelper;

namespace Zergatul.Security.Zergatul.MessageDigest
{
    class BLAKE512 : Security.MessageDigest
    {
        public override int BlockLength => 128;
        public override int DigestLength => 64;

        protected byte[] buffer;
        protected int bufOffset;
        protected ulong h0, h1, h2, h3, h4, h5, h6, h7;
        protected ulong s0, s1, s2, s3;
        protected ulong lengthHi, lengthLo;
        protected bool appendBit;

        public BLAKE512()
        {
            buffer = new byte[128];
            Reset();
            appendBit = true;
        }

        public override void Reset()
        {
            h0 = 0x6A09E667F3BCC908;
            h1 = 0xBB67AE8584CAA73B;
            h2 = 0x3C6EF372FE94F82B;
            h3 = 0xA54FF53A5F1D36F1;
            h4 = 0x510E527FADE682D1;
            h5 = 0x9B05688C2B3E6C1F;
            h6 = 0x1F83D9ABFB41BD6B;
            h7 = 0x5BE0CD19137E2179;
            s0 = 0;
            s1 = 0;
            s2 = 0;
            s3 = 0;

            bufOffset = 0;
            lengthHi = 0;
            lengthLo = 0;
        }

        public override void Update(byte[] data, int offset, int length)
        {
            if (data == null)
                throw new ArgumentNullException(nameof(data));
            if (offset < 0 || offset > data.Length)
                throw new ArgumentOutOfRangeException(nameof(offset));
            if (length < 0 || offset + length > data.Length)
                throw new ArgumentOutOfRangeException(nameof(length));

            while (length > 0)
            {
                int copy = System.Math.Min(buffer.Length - bufOffset, length);
                Buffer.BlockCopy(data, offset, buffer, bufOffset, copy);

                offset += copy;
                length -= copy;
                bufOffset += copy;

                if (bufOffset == buffer.Length)
                {
                    if ((lengthLo += 1024) < 1024)
                        lengthHi++;

                    bufOffset = 0;
                    ProcessBlock();
                }
            }
        }

        public override byte[] Digest()
        {
            if ((lengthLo += (ulong)(bufOffset << 3)) < (ulong)(bufOffset << 3))
                lengthHi++;

            bool nullT = bufOffset == 0 || bufOffset >= 112;

            buffer[bufOffset++] = 0x80;

            if (bufOffset > 112)
            {
                while (bufOffset < 128)
                    buffer[bufOffset++] = 0;
                bufOffset = 0;
                ProcessBlock();
            }

            while (bufOffset < 112)
                buffer[bufOffset++] = 0;
            if (appendBit)
                buffer[111] |= 0x01;

            GetBytes(lengthHi, ByteOrder.BigEndian, buffer, 112);
            GetBytes(lengthLo, ByteOrder.BigEndian, buffer, 120);

            if (nullT)
            {
                lengthLo = 0;
                lengthHi = 0;
            }

            bufOffset = 0;
            ProcessBlock();

            return InternalStateToBytes();
        }

        protected virtual byte[] InternalStateToBytes()
        {
            byte[] digest = new byte[64];
            GetBytes(h0, ByteOrder.BigEndian, digest, 0x00);
            GetBytes(h1, ByteOrder.BigEndian, digest, 0x08);
            GetBytes(h2, ByteOrder.BigEndian, digest, 0x10);
            GetBytes(h3, ByteOrder.BigEndian, digest, 0x18);
            GetBytes(h4, ByteOrder.BigEndian, digest, 0x20);
            GetBytes(h5, ByteOrder.BigEndian, digest, 0x28);
            GetBytes(h6, ByteOrder.BigEndian, digest, 0x30);
            GetBytes(h7, ByteOrder.BigEndian, digest, 0x38);
            return digest;
        }

        protected void ProcessBlock()
        {
            ulong m0 = ToUInt64(buffer, 0x00, ByteOrder.BigEndian);
            ulong m1 = ToUInt64(buffer, 0x08, ByteOrder.BigEndian);
            ulong m2 = ToUInt64(buffer, 0x10, ByteOrder.BigEndian);
            ulong m3 = ToUInt64(buffer, 0x18, ByteOrder.BigEndian);
            ulong m4 = ToUInt64(buffer, 0x20, ByteOrder.BigEndian);
            ulong m5 = ToUInt64(buffer, 0x28, ByteOrder.BigEndian);
            ulong m6 = ToUInt64(buffer, 0x30, ByteOrder.BigEndian);
            ulong m7 = ToUInt64(buffer, 0x38, ByteOrder.BigEndian);
            ulong m8 = ToUInt64(buffer, 0x40, ByteOrder.BigEndian);
            ulong m9 = ToUInt64(buffer, 0x48, ByteOrder.BigEndian);
            ulong ma = ToUInt64(buffer, 0x50, ByteOrder.BigEndian);
            ulong mb = ToUInt64(buffer, 0x58, ByteOrder.BigEndian);
            ulong mc = ToUInt64(buffer, 0x60, ByteOrder.BigEndian);
            ulong md = ToUInt64(buffer, 0x68, ByteOrder.BigEndian);
            ulong me = ToUInt64(buffer, 0x70, ByteOrder.BigEndian);
            ulong mf = ToUInt64(buffer, 0x78, ByteOrder.BigEndian);

            ulong v0 = h0;
            ulong v1 = h1;
            ulong v2 = h2;
            ulong v3 = h3;
            ulong v4 = h4;
            ulong v5 = h5;
            ulong v6 = h6;
            ulong v7 = h7;
            ulong v8 = s0 ^ 0x243F6A8885A308D3;
            ulong v9 = s1 ^ 0x13198A2E03707344;
            ulong va = s2 ^ 0xA4093822299F31D0;
            ulong vb = s3 ^ 0x082EFA98EC4E6C89;
            ulong vc = lengthLo ^ 0x452821E638D01377;
            ulong vd = lengthLo ^ 0xBE5466CF34E90C6C;
            ulong ve = lengthHi ^ 0xC0AC29B7C97C50DD;
            ulong vf = lengthHi ^ 0x3F84D5B5B5470917;

            #region Loop

            // Iteration 1
            v0 += v4 + (m0 ^ 0x13198A2E03707344);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m1 ^ 0x243F6A8885A308D3);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m2 ^ 0x082EFA98EC4E6C89);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m3 ^ 0xA4093822299F31D0);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m4 ^ 0xBE5466CF34E90C6C);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (m5 ^ 0x452821E638D01377);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (m6 ^ 0x3F84D5B5B5470917);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (m7 ^ 0xC0AC29B7C97C50DD);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m8 ^ 0xD1310BA698DFB5AC);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (m9 ^ 0x9216D5D98979FB1B);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (ma ^ 0xB8E1AFED6A267E96);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (mb ^ 0x2FFD72DBD01ADFB7);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (mc ^ 0x24A19947B3916CF7);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (md ^ 0xBA7C9045F12C7F99);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (me ^ 0x636920D871574E69);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (mf ^ 0x0801F2E2858EFC16);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 2
            v0 += v4 + (me ^ 0x2FFD72DBD01ADFB7);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (ma ^ 0x0801F2E2858EFC16);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m4 ^ 0x9216D5D98979FB1B);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m8 ^ 0x452821E638D01377);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m9 ^ 0x636920D871574E69);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (mf ^ 0xD1310BA698DFB5AC);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (md ^ 0xC0AC29B7C97C50DD);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (m6 ^ 0x24A19947B3916CF7);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m1 ^ 0xBA7C9045F12C7F99);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (mc ^ 0x13198A2E03707344);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m0 ^ 0xA4093822299F31D0);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (m2 ^ 0x243F6A8885A308D3);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (mb ^ 0x3F84D5B5B5470917);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m7 ^ 0xB8E1AFED6A267E96);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m5 ^ 0x082EFA98EC4E6C89);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m3 ^ 0xBE5466CF34E90C6C);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 3
            v0 += v4 + (mb ^ 0x9216D5D98979FB1B);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m8 ^ 0xB8E1AFED6A267E96);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (mc ^ 0x243F6A8885A308D3);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m0 ^ 0xBA7C9045F12C7F99);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m5 ^ 0xA4093822299F31D0);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (m2 ^ 0xBE5466CF34E90C6C);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (mf ^ 0x24A19947B3916CF7);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (md ^ 0x636920D871574E69);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (ma ^ 0x0801F2E2858EFC16);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (me ^ 0x2FFD72DBD01ADFB7);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m3 ^ 0xC0AC29B7C97C50DD);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (m6 ^ 0x082EFA98EC4E6C89);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m7 ^ 0x13198A2E03707344);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m1 ^ 0x3F84D5B5B5470917);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m9 ^ 0x452821E638D01377);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m4 ^ 0xD1310BA698DFB5AC);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 4
            v0 += v4 + (m7 ^ 0xD1310BA698DFB5AC);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m9 ^ 0x3F84D5B5B5470917);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m3 ^ 0x13198A2E03707344);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m1 ^ 0x082EFA98EC4E6C89);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (md ^ 0xBA7C9045F12C7F99);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (mc ^ 0x24A19947B3916CF7);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (mb ^ 0x0801F2E2858EFC16);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (me ^ 0xB8E1AFED6A267E96);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m2 ^ 0xC0AC29B7C97C50DD);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (m6 ^ 0xA4093822299F31D0);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m5 ^ 0x2FFD72DBD01ADFB7);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (ma ^ 0xBE5466CF34E90C6C);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m4 ^ 0x243F6A8885A308D3);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m0 ^ 0x452821E638D01377);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (mf ^ 0x9216D5D98979FB1B);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m8 ^ 0x636920D871574E69);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 5
            v0 += v4 + (m9 ^ 0x243F6A8885A308D3);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m0 ^ 0xD1310BA698DFB5AC);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m5 ^ 0x3F84D5B5B5470917);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m7 ^ 0xBE5466CF34E90C6C);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m2 ^ 0x452821E638D01377);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (m4 ^ 0xA4093822299F31D0);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (ma ^ 0x636920D871574E69);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (mf ^ 0x2FFD72DBD01ADFB7);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (me ^ 0x13198A2E03707344);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (m1 ^ 0x0801F2E2858EFC16);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (mb ^ 0xBA7C9045F12C7F99);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (mc ^ 0xB8E1AFED6A267E96);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m6 ^ 0x9216D5D98979FB1B);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m8 ^ 0xC0AC29B7C97C50DD);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m3 ^ 0x24A19947B3916CF7);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (md ^ 0x082EFA98EC4E6C89);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 6
            v0 += v4 + (m2 ^ 0xBA7C9045F12C7F99);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (mc ^ 0xA4093822299F31D0);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m6 ^ 0x2FFD72DBD01ADFB7);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (ma ^ 0xC0AC29B7C97C50DD);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m0 ^ 0xB8E1AFED6A267E96);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (mb ^ 0x243F6A8885A308D3);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (m8 ^ 0x082EFA98EC4E6C89);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (m3 ^ 0x9216D5D98979FB1B);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m4 ^ 0x24A19947B3916CF7);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (md ^ 0x452821E638D01377);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m7 ^ 0xBE5466CF34E90C6C);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (m5 ^ 0x3F84D5B5B5470917);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (mf ^ 0x0801F2E2858EFC16);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (me ^ 0x636920D871574E69);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m1 ^ 0xD1310BA698DFB5AC);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m9 ^ 0x13198A2E03707344);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 7
            v0 += v4 + (mc ^ 0xBE5466CF34E90C6C);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m5 ^ 0xBA7C9045F12C7F99);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m1 ^ 0x636920D871574E69);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (mf ^ 0x13198A2E03707344);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (me ^ 0x24A19947B3916CF7);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (md ^ 0x0801F2E2858EFC16);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (m4 ^ 0x2FFD72DBD01ADFB7);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (ma ^ 0x452821E638D01377);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m0 ^ 0x3F84D5B5B5470917);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (m7 ^ 0x243F6A8885A308D3);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m6 ^ 0x082EFA98EC4E6C89);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (m3 ^ 0xC0AC29B7C97C50DD);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m9 ^ 0xA4093822299F31D0);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m2 ^ 0xD1310BA698DFB5AC);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m8 ^ 0xB8E1AFED6A267E96);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (mb ^ 0x9216D5D98979FB1B);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 8
            v0 += v4 + (md ^ 0xB8E1AFED6A267E96);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (mb ^ 0x24A19947B3916CF7);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m7 ^ 0x0801F2E2858EFC16);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (me ^ 0x3F84D5B5B5470917);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (mc ^ 0x13198A2E03707344);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (m1 ^ 0xBA7C9045F12C7F99);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (m3 ^ 0xD1310BA698DFB5AC);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (m9 ^ 0x082EFA98EC4E6C89);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m5 ^ 0x243F6A8885A308D3);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (m0 ^ 0xBE5466CF34E90C6C);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (mf ^ 0x452821E638D01377);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (m4 ^ 0x636920D871574E69);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m8 ^ 0xC0AC29B7C97C50DD);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m6 ^ 0x9216D5D98979FB1B);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m2 ^ 0x2FFD72DBD01ADFB7);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (ma ^ 0xA4093822299F31D0);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 9
            v0 += v4 + (m6 ^ 0x636920D871574E69);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (mf ^ 0xC0AC29B7C97C50DD);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (me ^ 0xD1310BA698DFB5AC);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m9 ^ 0x0801F2E2858EFC16);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (mb ^ 0x082EFA98EC4E6C89);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (m3 ^ 0xB8E1AFED6A267E96);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (m0 ^ 0x9216D5D98979FB1B);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (m8 ^ 0x243F6A8885A308D3);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (mc ^ 0xA4093822299F31D0);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (m2 ^ 0xBA7C9045F12C7F99);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (md ^ 0x3F84D5B5B5470917);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (m7 ^ 0x24A19947B3916CF7);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m1 ^ 0x452821E638D01377);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m4 ^ 0x13198A2E03707344);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (ma ^ 0xBE5466CF34E90C6C);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m5 ^ 0x2FFD72DBD01ADFB7);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 10
            v0 += v4 + (ma ^ 0xA4093822299F31D0);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m2 ^ 0x2FFD72DBD01ADFB7);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m8 ^ 0x452821E638D01377);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m4 ^ 0x9216D5D98979FB1B);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m7 ^ 0xC0AC29B7C97C50DD);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (m6 ^ 0x3F84D5B5B5470917);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (m1 ^ 0xBE5466CF34E90C6C);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (m5 ^ 0x13198A2E03707344);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (mf ^ 0xB8E1AFED6A267E96);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (mb ^ 0x636920D871574E69);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m9 ^ 0x0801F2E2858EFC16);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (me ^ 0xD1310BA698DFB5AC);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m3 ^ 0xBA7C9045F12C7F99);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (mc ^ 0x082EFA98EC4E6C89);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (md ^ 0x243F6A8885A308D3);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m0 ^ 0x24A19947B3916CF7);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 11
            v0 += v4 + (m0 ^ 0x13198A2E03707344);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m1 ^ 0x243F6A8885A308D3);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m2 ^ 0x082EFA98EC4E6C89);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m3 ^ 0xA4093822299F31D0);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m4 ^ 0xBE5466CF34E90C6C);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (m5 ^ 0x452821E638D01377);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (m6 ^ 0x3F84D5B5B5470917);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (m7 ^ 0xC0AC29B7C97C50DD);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m8 ^ 0xD1310BA698DFB5AC);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (m9 ^ 0x9216D5D98979FB1B);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (ma ^ 0xB8E1AFED6A267E96);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (mb ^ 0x2FFD72DBD01ADFB7);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (mc ^ 0x24A19947B3916CF7);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (md ^ 0xBA7C9045F12C7F99);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (me ^ 0x636920D871574E69);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (mf ^ 0x0801F2E2858EFC16);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 12
            v0 += v4 + (me ^ 0x2FFD72DBD01ADFB7);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (ma ^ 0x0801F2E2858EFC16);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m4 ^ 0x9216D5D98979FB1B);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m8 ^ 0x452821E638D01377);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m9 ^ 0x636920D871574E69);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (mf ^ 0xD1310BA698DFB5AC);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (md ^ 0xC0AC29B7C97C50DD);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (m6 ^ 0x24A19947B3916CF7);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m1 ^ 0xBA7C9045F12C7F99);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (mc ^ 0x13198A2E03707344);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m0 ^ 0xA4093822299F31D0);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (m2 ^ 0x243F6A8885A308D3);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (mb ^ 0x3F84D5B5B5470917);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m7 ^ 0xB8E1AFED6A267E96);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m5 ^ 0x082EFA98EC4E6C89);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m3 ^ 0xBE5466CF34E90C6C);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 13
            v0 += v4 + (mb ^ 0x9216D5D98979FB1B);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m8 ^ 0xB8E1AFED6A267E96);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (mc ^ 0x243F6A8885A308D3);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m0 ^ 0xBA7C9045F12C7F99);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m5 ^ 0xA4093822299F31D0);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (m2 ^ 0xBE5466CF34E90C6C);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (mf ^ 0x24A19947B3916CF7);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (md ^ 0x636920D871574E69);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (ma ^ 0x0801F2E2858EFC16);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (me ^ 0x2FFD72DBD01ADFB7);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m3 ^ 0xC0AC29B7C97C50DD);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (m6 ^ 0x082EFA98EC4E6C89);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m7 ^ 0x13198A2E03707344);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m1 ^ 0x3F84D5B5B5470917);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m9 ^ 0x452821E638D01377);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m4 ^ 0xD1310BA698DFB5AC);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 14
            v0 += v4 + (m7 ^ 0xD1310BA698DFB5AC);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m9 ^ 0x3F84D5B5B5470917);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m3 ^ 0x13198A2E03707344);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m1 ^ 0x082EFA98EC4E6C89);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (md ^ 0xBA7C9045F12C7F99);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (mc ^ 0x24A19947B3916CF7);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (mb ^ 0x0801F2E2858EFC16);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (me ^ 0xB8E1AFED6A267E96);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m2 ^ 0xC0AC29B7C97C50DD);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (m6 ^ 0xA4093822299F31D0);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m5 ^ 0x2FFD72DBD01ADFB7);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (ma ^ 0xBE5466CF34E90C6C);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m4 ^ 0x243F6A8885A308D3);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m0 ^ 0x452821E638D01377);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (mf ^ 0x9216D5D98979FB1B);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m8 ^ 0x636920D871574E69);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 15
            v0 += v4 + (m9 ^ 0x243F6A8885A308D3);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (m0 ^ 0xD1310BA698DFB5AC);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m5 ^ 0x3F84D5B5B5470917);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (m7 ^ 0xBE5466CF34E90C6C);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m2 ^ 0x452821E638D01377);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (m4 ^ 0xA4093822299F31D0);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (ma ^ 0x636920D871574E69);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (mf ^ 0x2FFD72DBD01ADFB7);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (me ^ 0x13198A2E03707344);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (m1 ^ 0x0801F2E2858EFC16);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (mb ^ 0xBA7C9045F12C7F99);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (mc ^ 0xB8E1AFED6A267E96);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (m6 ^ 0x9216D5D98979FB1B);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (m8 ^ 0xC0AC29B7C97C50DD);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m3 ^ 0x24A19947B3916CF7);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (md ^ 0x082EFA98EC4E6C89);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            // Iteration 16
            v0 += v4 + (m2 ^ 0xBA7C9045F12C7F99);
            vc = RotateRight(vc ^ v0, 32);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 25);
            v0 += v4 + (mc ^ 0xA4093822299F31D0);
            vc = RotateRight(vc ^ v0, 16);
            v8 += vc;
            v4 = RotateRight(v4 ^ v8, 11);
            v1 += v5 + (m6 ^ 0x2FFD72DBD01ADFB7);
            vd = RotateRight(vd ^ v1, 32);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 25);
            v1 += v5 + (ma ^ 0xC0AC29B7C97C50DD);
            vd = RotateRight(vd ^ v1, 16);
            v9 += vd;
            v5 = RotateRight(v5 ^ v9, 11);
            v2 += v6 + (m0 ^ 0xB8E1AFED6A267E96);
            ve = RotateRight(ve ^ v2, 32);
            va += ve;
            v6 = RotateRight(v6 ^ va, 25);
            v2 += v6 + (mb ^ 0x243F6A8885A308D3);
            ve = RotateRight(ve ^ v2, 16);
            va += ve;
            v6 = RotateRight(v6 ^ va, 11);
            v3 += v7 + (m8 ^ 0x082EFA98EC4E6C89);
            vf = RotateRight(vf ^ v3, 32);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 25);
            v3 += v7 + (m3 ^ 0x9216D5D98979FB1B);
            vf = RotateRight(vf ^ v3, 16);
            vb += vf;
            v7 = RotateRight(v7 ^ vb, 11);
            v0 += v5 + (m4 ^ 0x24A19947B3916CF7);
            vf = RotateRight(vf ^ v0, 32);
            va += vf;
            v5 = RotateRight(v5 ^ va, 25);
            v0 += v5 + (md ^ 0x452821E638D01377);
            vf = RotateRight(vf ^ v0, 16);
            va += vf;
            v5 = RotateRight(v5 ^ va, 11);
            v1 += v6 + (m7 ^ 0xBE5466CF34E90C6C);
            vc = RotateRight(vc ^ v1, 32);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 25);
            v1 += v6 + (m5 ^ 0x3F84D5B5B5470917);
            vc = RotateRight(vc ^ v1, 16);
            vb += vc;
            v6 = RotateRight(v6 ^ vb, 11);
            v2 += v7 + (mf ^ 0x0801F2E2858EFC16);
            vd = RotateRight(vd ^ v2, 32);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 25);
            v2 += v7 + (me ^ 0x636920D871574E69);
            vd = RotateRight(vd ^ v2, 16);
            v8 += vd;
            v7 = RotateRight(v7 ^ v8, 11);
            v3 += v4 + (m1 ^ 0xD1310BA698DFB5AC);
            ve = RotateRight(ve ^ v3, 32);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 25);
            v3 += v4 + (m9 ^ 0x13198A2E03707344);
            ve = RotateRight(ve ^ v3, 16);
            v9 += ve;
            v4 = RotateRight(v4 ^ v9, 11);

            #endregion

            h0 ^= s0 ^ v0 ^ v8;
            h1 ^= s1 ^ v1 ^ v9;
            h2 ^= s2 ^ v2 ^ va;
            h3 ^= s3 ^ v3 ^ vb;
            h4 ^= s0 ^ v4 ^ vc;
            h5 ^= s1 ^ v5 ^ vd;
            h6 ^= s2 ^ v6 ^ ve;
            h7 ^= s3 ^ v7 ^ vf;
        }
    }
}